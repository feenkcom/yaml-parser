{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T10:27:00.482639+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T10:28:41.936481+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mWCfP/yuDQCtJq2cBHtp7g=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Here is a simple PetitParser that will parse text with two-space indentations (as in YAML) and produce an {{gtClass:name=OrderedDictionary}} where the keys are the lines and the values the subtrees represented as OrderedDictionaries."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-01T10:15:21.271725+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-01T11:35:07.085521+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UMR1U/yuDQCwN7lTBHtp7g=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtTodo:label=Turn this into a class, and subclass it to recognize actual YAML constructs.|completed=2023-02-01}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:46:52.585156+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:48:02.499305+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Y+odLhawDQCMyZ9EDWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The algorithm counts the `indentLevel` as the number of double spaces at the start of a line."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T11:00:00.574894+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T11:00:46.291311+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "gp5eXRawDQCZWY+4DWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Note that we use `indent not` in the `line` production to ensure that all `indent`s are consumed before starting to consume everything up to the newline."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:54:17.365492+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:54:43.064152+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "vINTSBawDQCTuKwiDWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We make use of a *dictionary stack* to keep track of where processed lines must be entered."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-02-02T10:48:49.70164+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2023-02-02T10:55:33.695045+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "90ZmNRawDQCPbpJKDWbXtg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "If it has *increased by more than one*, that is an error."
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:48:17.831597+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:48:42.627025+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "yZVxMhawDQCOUPrADWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "When a line is processed, we compare the indentation level with the current (previous) one."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:49:30.281936+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:55:42.93187+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "+z8RNhawDQCQF/ogDWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "If indentation has *increased by one*, we push on the dictionary stack the last entry of the topmost dictionary. This is where the next nesting level will continue."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:55:16.753917+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:56:22.699959+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6FJxTBawDQCWD1kcDWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "If indentation has *decreased*, we pop off the dictionary stack as many dictionaries as needed to reach the new indentation level."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:56:28.437433+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-02-02T10:57:22.16727+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "AQu5UBawDQCX7QNjDWbXtg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Finally the right dictionary is on top of the stack, so we can add the processed line (`node third`) to that dictionary."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-02T10:47:48.553055+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-02T10:47:55.738412+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QSG2MRawDQCN/oPKDWbXtg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Indentation algorithm"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-02T10:47:43.856762+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-02T10:47:43.856762+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "z76FMRawDQCN9OERDWbXtg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T10:25:59.070811+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-02-02T13:08:20.445649+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5wn5QfyuDQCtNKqkBHtp7g=="
				},
				"code" : "indentLevel := 0.\rroot := OrderedDictionary new.\rdictionaryStack := {root} asOrderedCollection.\rcurrentIndentation := 0.\r\rnewline := #newline asPParser ==> [ :node | indentLevel := 0 ].\rindent := '  ' asPParser ==> [ :node | indentLevel := indentLevel + 1 ].\r\rindents := (indent star , indent not)\r\t\t==> [ :node | \r\t\t\tindentLevel - currentIndentation > 1\r\t\t\t\tifTrue: [ self error: 'Too much indentation!' ].\r\t\t\tindentLevel = (currentIndentation + 1)\r\t\t\t\tifTrue: [ currentIndentation := indentLevel.\r\t\t\t\t\tself\r\t\t\t\t\t\tassert: [ dictionaryStack last notEmpty ]\r\t\t\t\t\t\tdescription: 'Nothing to indent from.'.\r\t\t\t\t\tdictionaryStack\r\t\t\t\t\t\taddLast: (dictionaryStack last at: dictionaryStack last keys last) ].\r\t\t\t[ indentLevel < currentIndentation ]\r\t\t\t\twhileTrue: [ currentIndentation := currentIndentation - 1.\r\t\t\t\t\tdictionaryStack removeLast ].\r\r\t\t\tnode first ].\r\rline := (indents , #newline asPParser negate plus flatten)\r\t\t==> [ :node | \r\t\t\tdictionaryStack last value at: node second put: OrderedDictionary new.\r\t\t\tnode second ].\r\rlinenl := (line , newline) ==> #first.\ryaml := (linenl / line) star ==> [ :node | root ]."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T10:26:14.077539+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T10:26:14.596305+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qAbeQvyuDQCtOf/eBHtp7g=="
				},
				"code" : "eg1 := 'foo\r  bar\r    baz\r  foobar\rfoo2\rbar2'.\rindentLevel := 0.\rroot := OrderedDictionary new.\rdictionaryStack := {root} asOrderedCollection.\rcurrentIndentation := 0.\ryaml end parse: eg1"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T17:30:25.47161+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-19T17:31:22.903744+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8HrjLwKvDQCyThH0BA+jVw=="
				},
				"code" : "yamlFile := 'gtoolkit.yaml' asFileReference .\rindentLevel := 0.\rroot := OrderedDictionary new.\rdictionaryStack := {root} asOrderedCollection.\rcurrentIndentation := 0.\ryaml end parse: yamlFile contents "
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-01-19T10:25:19.611689+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-02-01T10:16:40.699676+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Two-space indentation parser"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "b3f29e3f-fcae-0d00-ad25-a75c047b69ee"
	}
}