{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:41:09.627566+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:41:21.247545+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "X/UBrnSuDQCWghxTDLopQQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Next we want to handle some indentation in our mini YAML."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:41:24.398074+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:43:04.294451+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6CyYr3SuDQCWjILmDLopQQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can parse an indented nested list, but the indentation is ignored for now. It is the same as the simple list."
			},
			{
				"__type" : "exampleSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:41:52.991971+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:41:52.991971+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GPNmsXSuDQCWn7cVDLopQQ=="
				},
				"exampleSelector" : "nestedMappingListParse",
				"previewHeight" : 200,
				"previewShowSelector" : "gtViewsFor:",
				"exampleBehaviorName" : "YAMLParserExamples",
				"codeExpanded" : true,
				"previewExpanded" : false,
				"noCode" : true
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-12T16:44:21.509142+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-13T15:36:33.360321+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "BkwRsXSuDQCWkmOjDLopQQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We need to add INDENT and DEDENT tokens as is done in the {{gtClass:name=PythonParser}}. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-13T15:51:30.534698+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-13T15:53:04.25924+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jmgUsXSuDQCWmGKWDLopQQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We define the {{gtMethod:name=YAMLScanner>>indent}} method by adapting the {{gtMethod:name=PythonScanner>>indent}} method, and we add a new rule to the mapping production to support indentation."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-13T15:53:05.856111+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-01-13T15:53:52.40719+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9rOxIIiuDQCz64yfANblDg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Unfortunately the example is broken: {{gtMethod:name=YAMLParserExamples>>nestedMappingListParse}}. "
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-01-12T16:40:56.010731+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-01-12T16:40:56.010731+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Adding indentation"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "937b01ae-74ae-0d00-9681-8b760cba2941"
	}
}